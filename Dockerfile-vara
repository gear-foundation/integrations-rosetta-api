###Build Rosetta

FROM node:18 as builder-rosetta

WORKDIR /usr/src

RUN git clone https://github.com/gear-tech/rosetta-api.git .

RUN yarn install
RUN yarn build

###Build Gear

FROM amazonlinux:latest as builder-gear
ARG PROFILE=production

# Install dependecies
RUN yum update -y && yum install -y clang gcc git gzip make tar wget unzip

RUN git clone https://github.com/gear-tech/gear.git

WORKDIR gear

ARG PROTOC_ZIP=protoc-3.14.0-linux-x86_64.zip
RUN curl -OL https://github.com/protocolbuffers/protobuf/releases/download/v3.14.0/$PROTOC_ZIP
RUN unzip -o $PROTOC_ZIP -d /usr/local bin/protoc
RUN unzip -o $PROTOC_ZIP -d /usr/local 'include/*'
RUN rm -f $PROTOC_ZIP

# Install CMake v3
RUN wget https://cmake.org/files/v3.24/cmake-3.24.0-linux-x86_64.sh
RUN chmod +x cmake-3.24.0-linux-x86_64.sh
RUN ./cmake-3.24.0-linux-x86_64.sh --skip-license --prefix=/usr/local
RUN rm cmake-3.24.0-linux-x86_64.sh
RUN cmake --version

# Install Rust and toolchains
RUN  wget https://sh.rustup.rs/rustup-init.sh
RUN chmod +x rustup-init.sh
RUN ./rustup-init.sh -y
ENV PATH="/root/.cargo/bin:$PATH"
RUN rustup default stable
RUN cargo --version
RUN rustc --version
RUN rustup update nightly && rustup target add wasm32-unknown-unknown --toolchain nightly

# Build
RUN cargo build -p gear-cli --profile $PROFILE

### Final Image 

FROM ubuntu:22.04
RUN apt update -y
RUN apt install wget curl vim xz-utils -y

RUN curl -fsSL https://deb.nodesource.com/setup_16.x | bash -
RUN apt install -y nodejs

RUN apt remove cmdtest -y
RUN apt remove yarn -y
RUN npm install -g yarn
RUN apt install supervisor -y

COPY --from=builder-rosetta /usr/src /opt/rosetta-api
ARG PROFILE=production
COPY --from=builder-gear /gear/target/$PROFILE/gear /usr/local/bin
RUN useradd -m -u 1000 -U -s /bin/sh -d /gear gear && \
	mkdir -p /gear/.local/share && \
	mkdir /data && \
	chown -R gear:gear /data && \
	ln -s /data /gear/.local/share/gear

USER root

COPY supervisord-vara.conf /etc/supervisor/conf.d/supervisord.conf


EXPOSE 8080
CMD [ "/usr/bin/supervisord"]
