name: Renew vara

on:
  workflow_dispatch:
  schedule:
    - cron: '0 */2 * * *'


env:
  BRANCH_PREFIX: updated-qr
  CARGO_TERM_COLOR: always
  TERM: xterm-256color

jobs:
  update:
    runs-on: [self-hosted, cachepot, epyc-4, k8s-runner]
    env:
      RUSTUP_HOME: /tmp/rustup_home
    steps:
      - name: ðŸ›Ž Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          
      - name: "Install: Set cargo path"
        run: echo "/tmp/cargo/bin" >> $GITHUB_PATH
          
      - name: Collation Genesis and SpecVersion
        id: compare
        run: |
          # Check Genesis and SpecVersion
          RenewedGenesis=$(curl -X POST http://rpc.vara-network.io/jsonrpc -H 'Content-Type: application/json' -d '[ { "id": 1, "jsonrpc": "2.0", "method": "chain_getBlockHash", "params": [0]}]'  | jq -r '.[].result');
          RenewedSpecVersion=$(curl -X POST http://rpc.vara-network.io/jsonrpc  -H 'Content-Type: application/json' -d '[ { "id": 1, "jsonrpc": "2.0", "method": "state_getRuntimeVersion", "params": []}]'  | jq -r '.[].result.specVersion'); 
          # Read previous Genesis and SpecVersion from file
          originalgenesis=$(sed '1!d' spec-vara.info)
          originalspecVersion=$(sed '2!d' spec-vara.info)
          NewValue="$RenewedGenesis\n$RenewedSpecVersion"
          # Compare
          if [ "$originalspecVersion" -ne "$RenewedSpecVersion" ] || [ "$originalgenesis" != "$RenewedGenesis" ]
          then echo "Sper or Genesis change" && echo -e "$NewValue"  > spec-vara.info && echo "::set-output name=metaChanged::true"
          else echo "Spec and Genesis haven't changed"
          fi

      - name: Install dependencies
        if: ${{ steps.compare.outputs.metaChanged == 'true' }}
        working-directory: util
        run: yarn install
        
      - name: Renew vara config
        if: ${{ steps.compare.outputs.metaChanged == 'true' }}
        working-directory: util
        run: yarn update:vara

      - name: New PR branch
        if: ${{ steps.compare.outputs.metaChanged == 'true' }}
        id: new-branch
        run: |
          NAME="$BRANCH_PREFIX-$(date '+%Y-%m-%d')"
          echo "::set-output name=name::$NAME"
                   
      - name: Create Pull Request if not exist
        if: ${{ steps.compare.outputs.metaChanged == 'true' }}
        id: cpr
        uses: peter-evans/create-pull-request@v4
        with:
          commit-message: add updated QR codes
          branch: ${{ steps.new-branch.outputs.name }}
          delete-branch: true
          base: master
          title: '[Automated] Renew vara config'
          add-paths: |
            spec-vara.info
            config/*
          body: |
            Updated metadata QR codes
          draft: false
